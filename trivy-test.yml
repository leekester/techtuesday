# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:

- script: |
    sudo apt-get install wget apt-transport-https gnupg lsb-release jq
    wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
    echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
    sudo apt-get update
    sudo apt-get install trivy
  displayName: 'Install Trivy'

- task: Docker@2
  inputs:
    command: build
    Dockerfile: nginx-dockerfile
  displayName: 'Build bare NGINX image to be scanned'

- script: |
    docker images
    trivy -f json --severity HIGH,CRITICAL -o trivy_scan.json image nginx:latest
    HIGH_COUNT=$(jq .Results[0].Vulnerabilities[].Severity trivy_scan.json | grep "HIGH" | wc -l)
    CRITICAL_COUNT=$(jq .Results[0].Vulnerabilities[].Severity trivy_scan.json | grep "CRITICAL" | wc -l)
    printf "I ${RED}love${NC} Stack Overflow\n"
    echo "Vulnerability Summary..."
    echo Criticals: $CRITICAL_COUNT
    echo Highs: $HIGH_COUNT
  displayName: 'Scan NGINX image'

# - task: trivy@1
#   inputs:
#     image: 'nginx:latest'
#     severities: 'HIGH,CRITICAL'
#     version: 'latest'
#     debug: true